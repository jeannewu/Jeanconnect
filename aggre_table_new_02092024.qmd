---
title: "Aggr_metrics_2024"
format: html
editor: visual
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
#| echo: false
#| include: false
#| eval: true
# [hide] 
library(bigrquery)
library(data.table) ###to write or read and data management 
library(boxr) ###read or write data from/to box
library(tidyverse) ###for data management https://tidyselect.r-lib.org/reference/faq-external-vector.html
library(dplyr) ###data management some functions are not available in the dplyr masked in the tidyverse
library(reshape)  ###to work on transition from long to wide or wide to long data
library(listr) ###to work on a list of vector, files or..
#library(sqldf) ##sql
#library(lubridate) ###date time it is already masked in 'tidyverse'
library(ggplot2) ###plots
library(ggpubr) ###for the publications of plots
library(RColorBrewer) ###visions color http://www.sthda.com/english/wiki/colors-in-r
library(gridExtra)
#library(stringr) ###to work on patterns, charaters
library(plyr)
library(tidyr)
library(tinytex) #for pdf
#library(rmarkdown) ###for the output tables into other files: pdf, rtf, etc.
library(janitor) #to get the summary sum
library(finalfit) #https://cran.r-project.org/web/packages/finalfit/vignettes/export.html t
library(expss) ###to add labels
library(epiDisplay) ##recommended applied here crosstable, tab1
#library(summarytools) ##recommended not applied in this R code
library(gmodels) ##recommended but not applied in this R code
library(magrittr)
library(arsenal)
library(gtsummary)
library(kableExtra)
#library(patchwork)
library(rio)
library(readxl)


box_auth(client_id = "627lww8un9twnoa8f9rjvldf7kb56q1m",
         client_secret = "gSKdYKLd65aQpZGrq9x4QVUNnn5C8qqm")

##for Age groups by Letters
 outputpath <- "~/Documents/Connect_projects/Biospecimen_Feb2022/Jing_projects/biospecQC_03082022/data/"
 urlfile<- "https://raw.githubusercontent.com/episphere/conceptGithubActions/master/csv/masterFile.csv" ###to grab the updated dd from github
 y <- read.csv(urlfile)
 
 bq_auth()
 
  project <- "nih-nci-dceg-connect-prod-6d04"
  billing <- "nih-nci-dceg-connect-prod-6d04"
  
age_letter <- "SELECT d_827220437, state_d_811353546, state_d_934298480, count(token) as token_site FROM `nih-nci-dceg-connect-prod-6d04.FlatConnect.participants_JP`  Where state_d_811353546 is NOT NULL group by d_827220437, state_d_811353546, state_d_934298480"

letter.age <- bq_project_query(project,query=age_letter)
age.letters <- bq_table_download(letter.age,bigint="integer64")

age.letterse <- age.letters %>%
  mutate(age = case_when(state_d_934298480 == 713781738 ~ "30-34",
                         state_d_934298480 == 631272782 ~ "35-39",
                         state_d_934298480 == 124276120 ~ "40-45",
                         state_d_934298480 == 450985724 ~ "46-50",
                         state_d_934298480 == 363147933 ~ "51-55",
                         state_d_934298480 == 636706443 ~ "56-60",
                         state_d_934298480 == 771230670 ~ "61-65",
                         state_d_934298480 == 722846087 ~ "66-70",
                         is.na(state_d_934298480) ~ "Unknown"),
         Letter = case_when(state_d_811353546 == '711757828' ~ "Control X",
                            state_d_811353546 == '943427992' ~ "Variant A",
                            state_d_811353546 == '648219696' ~ "Variant B",
                            state_d_811353546 == '798915634' ~ "Variant C",
                            state_d_811353546 == '896010519' ~ "Variant D"),
         Site = case_when(d_827220437 == '531629870' ~ "HealthPartners",
                          d_827220437 == '548392715' ~ "Henry Ford Health System", 
                          d_827220437 == '303349821' ~ "Marshfield Clinic Health System",
                          d_827220437 == '657167265' ~ "Sanford Health", 
                          d_827220437 == '809703864' ~ "University of Chicago Medicine",
                          d_827220437 == '125001209' ~ "Kaiser Permanente Colorado",
                          d_827220437 == '327912200' ~ "Kaiser Permanente Georgia",
                          d_827220437 == '452412599' ~ "Kaiser Permanente Northwest",  
                          d_827220437 == '300267574' ~ "Kaiser Permanente Hawaii"),
         
         Site = factor(Site, levels=c("HealthPartners", "Henry Ford Health System","Marshfield Clinic Health System",
                                      "Sanford Health", "University of Chicago Medicine","Kaiser Permanente Colorado",
                                      "Kaiser Permanente Georgia","Kaiser Permanente Hawaii","Kaiser Permanente Northwest"))) 

Letters_Age <- age.letterse %>% group_by(age,Letter) %>% mutate(token_all = sum(token_site,rm.na=T)) %>% distinct(token_all,.keep_all = T) %>% as_tibble() %>% dplyr::select(age, Letter,token_all) %>% group_by(age) %>% pivot_wider(names_from = Letter, values_from = token_all, values_fill = 0) %>% janitor::adorn_totals()

Letters_Age_Site <- age.letterse %>% group_by(Site,age,Letter) %>% dplyr::select(Site,age, Letter,token_site) %>% pivot_wider(names_from = Letter, values_from = token_site, values_fill = 0) %>% janitor::adorn_totals()

write.csv(Letters_Age, file=paste(outputpath,"nonKPsLetter_Age_Experiment_Final_Agg_Data_",Sys.Date(),".csv",sep=""),na="")
```

You can add options to executable code like this

```{r}
#| echo: false
box_setwd(dir_id=245027826926)

box_ls()

# box.com remote object list (5 objects)
# 
#   Summary of first 5:

#                                                                              name type
# 1                         HFH_Final Letter Variant Experiment Aggregate Data.xlsx file
# 2             HP_Letter Variant Experiment Aggregate Demographic Data Tables.xlsx file
# 3                                MF Letter Variant Experiment Final Agg Data.xlsx file
# 4                          SH_Final Letter Variant Experiment Aggregate Data.xlsx file
# 5 UChicago_Letter Variant Experiment Aggregate Demographic Data Tables _2024.xlsx file
#              id  size              owner
# 1 1424131115403 27 kB brotzmanmj@nih.gov
# 2 1430201637558 26 kB brotzmanmj@nih.gov
# 3 1425254524375 25 kB brotzmanmj@nih.gov
# 4 1419906784752 32 kB brotzmanmj@nih.gov
# 5 1426373156540 32 kB brotzmanmj@nih.gov
dir_letter <-as.data.frame(box_ls())
dir_letter$Site <- str_split_i(str_split_i(dir_letter$name,"_",1)," ",1)

```

The `echo: false` option disables the printing of code (only output is displayed).

```{r}
names <- c("Letter", "Total_Letters","Consent","ConsentRate","Notes_C","Refusal","RefusalRate","Notees_R")


 nonkp <- list()
for (f in 1:6){
  
  dt <- eval(parse(text=paste("box_read(file_id=", dir_letter$id[f],",sheet=1)",sep="")))
  
  last.row <- as.numeric(nrow(dt))
  letter <- unlist(dt[1,][grepl("Letter", dt[1,])])
  names.new <- NULL
  for (i in 1:5){
    for (j in 1:8){
      n <- 8*(i-1)+j
      name <- paste(names[j],str_split_i(letter[i]," ",-1),sep="_")
      names(dt)[n] <-paste(names[j],str_split_i(letter[i]," ",2),sep="_")
      names.new <- c(names.new,name)
    }
  }

row.1st <- as.numeric(rownames(dt)[grepl("Total",dt[,1])])
dt1 <- dt[c(row.1st:last.row),]
#to add the second column of the column name for the race ethnic
row.names(dt1)[grepl("Total|Socioeconomic|Race|Age|Sex",dt1$Letter_A)]
#"5"  "6"  "27" "33" "39"
rows.del = row.1st-1

  row_vec <- c(min(as.numeric(row.names(dt1)[grepl("Total",dt1$Letter_A)]))-rows.del, min(as.numeric(row.names(dt1)[grepl("Race",dt1$Letter_A)]))-rows.del, min(as.numeric(row.names(dt1)[grepl("Socioeconomic",dt1$Letter_A)]))-rows.del,min(as.numeric(row.names(dt1)[grepl("Age",dt1$Letter_A)]))-rows.del,min(as.numeric(row.names(dt1)[grepl("Sex",dt1$Letter_A)]))-rows.del,1+as.numeric(nrow(dt1)))

  times <- diff(row_vec)
  groups <- c("Overall","Race","SES","Age","Sex")

  newcol <- NULL
  for (m in 1:length(groups)){
  
  vet <- rep(groups[m],each=times[m])
  newcol <- c(newcol,vet)
  
  }
  
dt1 <- cbind(dt1,newcol)
dt1$Site <- dir_letter$Site[f]


nonkp[[f]] <- dt1
}
 
overall <- do.call('rbind',nonkp)
overall_total <- filter(overall,Letter_A=="Total") %>% 
  mutate(across(c(Total_Letter))) %>% 
  dplyr::select(Row.names,Site,new_group,newcol,Race,Letter_A, any_of(contains(select))) %>% mutate(across(contains(select),~ as.numeric(.x))) %>% janitor::adorn_totals()

#the overall in the Letter tables are far more than the sum of all Age groups in each Letter (difference is about 1000)
```

```{r}
sp <- box_read(file_id=1419906784752)
names <- c("Letter", "Total_Letters","Consent","ConsentRate","Notes_C","Refusal","RefusalRate","Notees_R")


letter <- unlist(sp[1,][grepl("Letter", sp[1,])])
names.new <- NULL
for (i in 1:5){
  for (j in 1:8){
    n <- 8*(i-1)+j
   name <- paste(names[j],str_split_i(letter[i]," ",-1),sep="_")
   names(sp)[n] <-paste(names[j],str_split_i(letter[i]," ",2),sep="_")
   names.new <- c(names.new,name)
  }
}


row.1st <- as.numeric(rownames(sp)[grepl("Total",sp[,1])])
sp1 <- sp[c(row.1st:ncol(sp)),]
#to add the second column of the column name for the race ethnic
row.names(sp1)[grepl("Total|Socioeconomic|Race|Age|Sex",sp1$Letter_A)]
#"5"  "6"  "27" "33" "39"
rows.del = row.1st-1

  row_vec <- c(min(as.numeric(row.names(sp1)[grepl("Total",sp1$Letter_A)]))-rows.del, min(as.numeric(row.names(sp1)[grepl("Race",sp1$Letter_A)]))-rows.del, min(as.numeric(row.names(sp1)[grepl("Socioeconomic",sp1$Letter_A)]))-rows.del,min(as.numeric(row.names(sp1)[grepl("Age",sp1$Letter_A)]))-rows.del,min(as.numeric(row.names(sp1)[grepl("Sex",sp1$Letter_A)]))-rows.del,1+as.numeric(nrow(sp1)))

  times <- diff(row_vec)
  groups <- c("Overall","Race","SES","Age","Sex")

  newcol <- NULL
  for (m in 1:length(groups)){
  
  vet <- rep(groups[m],each=times[m])
  newcol <- c(newcol,vet)
  
  }
  
sp1 <- cbind(sp1,newcol)

sp1$Site <- dir_letter$Site[4]
select <- c("Total_Letters","Consent_","Refusal_")
race <- data.frame(Race=rep(c("White","Black / African American","Asian / Middle Eastern","American Indian / Alaska Native", "Native Hawaiian","Unknown"), each=3), Ethnic = rep(c("Hispanic","non-Hispanic","unknown"),times=6), rows.n=c(as.numeric(row.names(sp1)[grepl("White",sp1$Letter_A)]):(as.numeric(row.names(sp1)[grepl("Socioeconomic",sp1$Letter_A)])-1 )))

sp2 <- merge(sp1,race, by.x="row.names",by.y="rows.n",all.x=T)
sp2$Row.names <- as.numeric(sp2$Row.names)

 sp2$Letter_A[which(rowSums(is.na(sp2[,c(3:9,11:17,19:25,27:33,35:41)])) > 29)]

tmp <- filter(sp2,Row.names %nin% c(6:8,27,33,39)) %>% 
  mutate(new_group = case_when(newcol=="SES" & grepl("Missing|Unknown",Letter_A) ~ "SES.Unknown/ Missing",
                              newcol=="Sex" & grepl("Unknown",Letter_A) ~ "Sex.Unknown/ Missing",
                              newcol %in% c("Sex","SES","Age", "Overall") & !grepl("unknown|missing",str_to_lower(Letter_A)) ~ Letter_A,
                              newcol=="Race" & Race %in% c("unknown","Unknown") & Ethnic == "unknown" ~ "Race.Unknown/ Missing",
                              newcol=="Race" & Race %in% c("unknown","Unknown") & Ethnic != "unknown" ~ paste("Unknown",Ethnic,sep="."),
                              newcol=="Race" & grepl("other|multi", str_to_lower(Race)) ~ paste("Other / Multiracial",Ethnic,sep="."),
                             newcol=="Race" & grepl("White|Black|Asian|Native|Indian|Hawaiian", Race) ~ paste(Race,Ethnic,sep="."))) %>% 
  dplyr::select(Row.names,Site,new_group,newcol,Race,Letter_A, any_of(contains(select))) %>% mutate(across(contains(select),~ as.numeric(.x)))

tmp.group <- tmp %>% group_by(newcol) %>% mutate(across(contains(select),~sum(.x,na.rm=TRUE))) %>% distinct(newcol, .keep_all = TRUE) %>% as_tibble() #the sum of each factor are same as the ones in the total row
select <- c("Total_Letters","Consent_","Refusal_")

SP.new <- tmp

sp2.group <- sp1 %>% dplyr::select(contains(select)) %>% group_by(newcol) %>% mutate(across(select),~sum(.x,na.rm=TRUE)) %>% distinct(new_group, .keep_all = TRUE) 

tmp <- filter(sp2,Row.names %nin% c(6:7,27,33,39)) %>%  dplyr::select(Row.names,newcol,Race, any_of(contains(select))) %>% mutate(across(contains(select),~ as.numeric(.x)))

tmp.group <- tmp %>% group_by(newcol) %>% mutate(across(contains(select),~sum(.x,na.rm=TRUE))) %>% distinct(new_group, .keep_all = TRUE) 


```

#for each site data

```{r}

#UoCH
dt1 <- nonkp[[5]]
dt1$Letter_A[which(dt1$newcol=="Race")]

race <- data.frame(Race=rep(c("White","Black / African American","Asian / Middle Eastern","American Indian / Alaska Native", "Native Hawaiian","Unknown"), each=3), Ethnic = rep(c("Hispanic","non-Hispanic","unknown"),times=6), rows.n=c(as.numeric(row.names(dt1)[grepl("White",dt1$Letter_A)]):(as.numeric(row.names(dt1)[grepl("Socioeconomic",dt1$Letter_A)])-1 )))

UCh <- merge(dt1,race, by.x="row.names",by.y="rows.n",all.x=T)

UCh$Row.names <- as.numeric(UCh$Row.names) 


select <- c("Total_Letters_","Consent_","Refusal_")

tmp <- filter(UCh,Row.names %nin% c(6:8,27,33,39)) %>% 
  mutate(new_group = case_when(grepl("unknown|Unknown",Race) & Ethnic == "unknown" ~ "Race.Unknown/ Missing",
                               grepl("unknown|Unknown",Race) & Ethnic != "unknown" ~ paste("Unknown",Ethnic,sep="."),
                                 grepl("other|multi", str_to_lower(Race)) ~ paste("Other / Multiracial",Ethnic,sep="."),
                                grepl("White|Black|Asian|Native|Indian|Hawaiian", Race) ~ paste(Race,Ethnic,sep="."),
                                 newcol=="SES" & grepl("Missing",Letter_A) ~ "SES.Unknown/ Missing",
                                 newcol=="Sex" & grepl("Unknown",Letter_A) ~ "Sex.Unknown/ Missing",
                                 newcol %in% c("Sex","SES","Age", "Overall") & !grepl("unknown|missing",str_to_lower(Letter_A)) ~ Letter_A)) %>% 
  dplyr::select(Row.names,Site,new_group,newcol,Race,Letter_A, any_of(contains(select))) %>% mutate(across(contains(select),~ as.numeric(.x)))

tmp.group <- tmp %>% group_by(newcol) %>% mutate(across(contains(select),~sum(.x,na.rm=TRUE))) %>% distinct(newcol, .keep_all = TRUE) 

UCh.missing <- as.tibble(tmp.group) %>% select(contains(select), Site, newcol,Row.names) %>%
    mutate(across(where(is.numeric), ~ max(.x)-(.x))) %>% 
    mutate(new_group=ifelse(newcol=="Total",newcol,paste0(newcol,".Unknown/ Missing")))
 
 UCh.new <- bind_rows(tmp,UCh.missing[which(UCh.missing$newcol=="SES"),])  %>% as_tibble() %>% group_by(newcol,new_group) %>% mutate(across(contains(select),~sum(as.numeric(.x),na.rm=TRUE))) %>% distinct(new_group, .keep_all = TRUE) %>% as_tibble()
#for the 
```

```{r}
# HF <- box_read(file_id=1424131115403)
# 
# letter <- unlist(HF[1,][grepl("Letter", HF[1,])])
# names.new <- NULL
# for (i in 1:5){
#   for (j in 1:8){
#     n <- 8*(i-1)+j
#    name <- paste(names[j],str_split_i(letter[i]," ",-1),sep="_")
#    names(hf)[n] <-paste(names[j],str_split_i(letter[i]," ",2),sep="_")
#    names.new <- c(names.new,name)
#   }
# }
# 
# row.1st <- as.numeric(rownames(HF)[grepl("Total",HF[,1])])
# hf1 <- HF %>% HF[c(row.1st:ncol(HF)),]
# #to add the second column of the column name for the race ethnic
# row.names(HF1)[grepl("Total|Socioeconomic|Race|Age|Sex",HF1$Letter_A)]
# #"5"  "6"  "27" "33" "39"
# rows.del = row.1st-1
# 
#   row_vec <- c(min(as.numeric(row.names(hf1)[grepl("Total",hf1$Letter_A)]))-rows.del, min(as.numeric(row.names(hf1)[grepl("Race",hf1$Letter_A)]))-rows.del, min(as.numeric(row.names(sp1)[grepl("Socioeconomic",sp1$Letter_A)]))-rows.del,min(as.numeric(row.names(sp1)[grepl("Age",sp1$Letter_A)]))-rows.del,min(as.numeric(row.names(sp1)[grepl("Sex",sp1$Letter_A)]))-rows.del,1+nrow(sp1))
# 
#   times <- diff(row_vec)
#   groups <- c("Overall","Race","SES","Age","Sex")
# 
#   newcol <- NULL
#   for (m in 1:length(groups)){
#   
#   vet <- rep(groups[m],each=times[m])
#   newcol <- c(newcol,vet)
#   
#   }
#   
# hf1 <- cbind(hf1,newcol)

hf1 <- nonkp[[1]]
race <- data.frame(Race=rep(c("White","Black / African American","Asian / Middle Eastern","American Indian / Alaska Native", "Native Hawaiian","Unknown"), each=3), Ethnic = rep(c("Hispanic","non-Hispanic","unknown"),times=6), rows.n=c(as.numeric(row.names(hf1)[grepl("White",hf1$Letter_A)]):(as.numeric(row.names(hf1)[grepl("Socioeconomic",hf1$Letter_A)])-1 )))

hf2 <- merge(hf1,race, by.x="row.names",by.y="rows.n",all.x=T)
hf2$Row.names <- as.numeric(hf2$Row.names)


tmp <- filter(hf2,Row.names %nin% c(6:8,27,32,38,43)) %>% 
  mutate(new_group= case_when(Race %in% c("unknown","Unknown") & Ethnic == "unknown" ~ "Race.Unknown/ Missing",
                              Race %in% c("unknown","Unknown") & Ethnic != "unknown" ~ paste("Unknown",Ethnic,sep="."),
                              grepl("other|multi", str_to_lower(Race)) ~ paste("Other / Multiracial",Ethnic,sep="."),
                              grepl("White|Black|Asian|Native|Indian|Hawaiian", Race) ~ paste(Race,Ethnic,sep="."),
                              newcol=="SES" & grepl("Missing",Letter_A) ~ "SES.Unknown/ Missing",
                              newcol=="Sex" & grepl("Unknown",Letter_A) ~ "Sex.Unknown/ Missing",
                              newcol %in% c("Sex","SES","Age", "Overall") & !grepl("unknown|missing",str_to_lower(Letter_A)) ~ Letter_A)) %>%  dplyr::select(Row.names,newcol, new_group,Race,Letter_A, any_of(contains(select)),Site) %>% mutate(across(contains(select),~ as.numeric(.x)))

#tmp$new_group[grepl("Unknowntmp$new_group )]
tmp.group <- tmp %>% group_by(newcol) %>% mutate(across(contains(select),~sum(.x,na.rm=TRUE))) %>% distinct(newcol, .keep_all = TRUE) %>% as_tibble()

HF.missing <- as.tibble(tmp.group) %>% select(contains(select), Site, newcol) %>%
    mutate(across(where(is.numeric), ~ max(.x)-(.x))) %>% 
    mutate(new_group=ifelse(newcol=="Total",newcol,paste0(newcol,".Unknown/ Missing")))
 
 HF.new <- bind_rows(tmp,HF.missing)  %>% as_tibble() %>% group_by(newcol,new_group) %>% mutate(across(contains(select),~sum(as.numeric(.x),na.rm=TRUE))) %>% distinct(new_group, .keep_all = TRUE) %>% as_tibble()
 
 
 #HP
 hp <- nonkp[[2]]
 hp$Letter_A[which(hp$newcol=="Race" & !is.na(hp$Letter_A))]
# [1] "Race/Ethnicity"                  "White"                          
# [3] "Black / African American"        "Asian / Middle Eastern"         
# [5] "American Indian / Alaska Native" "Native Hawaiian"                
# [7] "other"                           "unknown"                        
# [9] "NA"  
 
 race <- data.frame(Race=rep(c("White","Black / African American","Asian / Middle Eastern","American Indian / Alaska Native", "Native Hawaiian","other","unknown","NA"), each=3), Ethnic = rep(c("Hispanic","non-Hispanic","unknown"),times=8), rows.n=c(as.numeric(row.names(hp)[grepl("White",hp$Letter_A)]):(as.numeric(row.names(hp)[grepl("Socioeconomic",hp$Letter_A)])-1 )))

hp2 <- merge(hp,race, by.x="row.names",by.y="rows.n",all.x=T)
hp2$Row.names <- as.numeric(hp2$Row.names)


tmp <- filter(hp2,Row.names %nin% c(6:8,30:33,39,45)) %>% 
  mutate(new_group= case_when(Race %in% c("unknown","Unknown") & Ethnic == "unknown" ~ "Race.Unknown/ Missing",
                              Race %in% c("unknown","Unknown") & Ethnic != "unknown" ~ paste("Unknown",Ethnic,sep="."),
                              grepl("other|multi", str_to_lower(Race)) ~ paste("Other / Multiracial",Ethnic,sep="."),
                              grepl("White|Black|Asian|Native|Indian|Hawaiian", Race) ~ paste(Race,Ethnic,sep="."),
                              newcol=="SES" & grepl("Missing",Letter_A) ~ "SES.Unknown/ Missing",
                              newcol=="Sex" & grepl("Unknown",Letter_A) ~ "Sex.Unknown/ Missing",
                              newcol %in% c("Sex","SES","Age", "Overall") & !grepl("unknown|missing",str_to_lower(Letter_A)) ~ Letter_A)) %>%  dplyr::select(Row.names,newcol, new_group,Race,Letter_A, any_of(contains(select)),Site) %>% mutate(across(contains(select),~ as.numeric(.x)))

tmp$new_group[which(tmp$new_group=="Race.Unknown.unknown")] <- "Race.Unknown/ Missing"

tmp.group <- tmp %>% group_by(newcol) %>% mutate(across(contains(select),~sum(.x,na.rm=TRUE))) %>% distinct(newcol, .keep_all = TRUE) %>% as_tibble()

HP.missing <- as_tibble(tmp.group) %>% select(contains(select), Site, newcol) %>%
    mutate(across(where(is.numeric), ~ max(.x)-(.x))) %>% 
    mutate(new_group=ifelse(newcol=="Total",newcol,paste0(newcol,".Unknown/ Missing")))

HP.new <- bind_rows(tmp,HP.missing)  %>% as_tibble() %>% 
  group_by(newcol,new_group) %>% mutate(across(contains(select),~sum(as.numeric(.x),na.rm=TRUE))) %>% distinct(new_group, .keep_all = TRUE) %>% as_tibble()

###MF
 mf <- nonkp[[4]]
 mf$Letter_A[which(mf$newcol=="Race" & !is.na(mf$Letter_A))]
 # [1] "Race/Ethnicity Hispanic"         "Non-Hispanic"                   
 # [3] "Unknown"                         "White"                          
 # [5] "Black / African American"        "Asian / Middle Eastern"         
 # [7] "American Indian / Alaska Native" "Native Hawaiian"                
 # [9] "Unknown"                         "Multiracial"  
 
race <- data.frame(Race=c(rep(c("White","Black / African American","Asian / Middle Eastern","American Indian / Alaska Native", "Native Hawaiian"), each=3),"Unknown","Multiracial"), rows.n=c(as.numeric(row.names(mf)[grepl("White",mf$Letter_A)]):(as.numeric(row.names(mf)[grepl("Socioeconomic",mf$Letter_A)])-2 )))

mf2 <- merge(mf,race, by.x="row.names",by.y="rows.n",all.x=T)
mf2$Row.names <- as.numeric(mf2$Row.names)


tmp <- filter(mf2,Row.names %nin% c(6:8,10:11,13:14,16:17,19:20,22:23,26,27,32,38,43)) %>% mutate(new_group = ifelse(newcol=="Race", paste(Race,"non-Hispanic",sep="."), Letter_A)) %>%  dplyr::select(Row.names,newcol, new_group,Race, any_of(contains(select)),Site) %>% mutate(across(contains(select),~ as.numeric(.x)))

tmp.group <- as_tibble(tmp) %>% group_by(newcol) %>% mutate(across(contains(select),~sum(.x,na.rm=TRUE))) %>% distinct(newcol, .keep_all = TRUE) %>% as_tibble()

MF.missing <- as_tibble(tmp.group) %>% select(contains(select), Site, newcol) %>%
    mutate(across(where(is.numeric), ~ max(.x)-(.x))) %>% 
    mutate(new_group=ifelse(newcol=="Total",newcol, paste0(newcol,".Unknown/ Missing")))
          
          

MF.new <- tmp  %>% as_tibble() %>% group_by(newcol,new_group) %>% mutate(across(contains(select),~sum(as.numeric(.x),na.rm=TRUE))) %>% distinct(new_group, .keep_all = TRUE) %>% as_tibble() 

MF.new$new_group <- ifelse(MF.new$newcol=="Race" & MF.new$Race =="Multiracial", "Other / Multiracial.non-Hispanic",MF.new$new_group)


#Marshfield has the updated data
 mc <- nonkp[[3]]
 mc$Letter_A[which(mc$newcol=="Race" & !is.na(mc$Letter_A))]
 # 1] "Race/Ethnicity Hispanic"         "Non-Hispanic"                    "Unknown"                        
#[4] "White"                           "Black / African American"        "Asian / Middle Eastern"         
#[7] "American Indian / Alaska Native" "Native Hawaiian"                 "Unknown"  
 
 race <- data.frame(Race=rep(c("White","Black / African American","Asian / Middle Eastern","American Indian / Alaska Native", "Native Hawaiian","Unknown"), each=3), Ethnic = rep(c("Hispanic","non-Hispanic","unknown"),times=6), rows.n=c(as.numeric(row.names(mc)[grepl("White",mc$Letter_A)]):(as.numeric(row.names(mc)[grepl("Socioeconomic",mc$Letter_A)])-1 )))

mc2 <- merge(mc,race, by.x="row.names",by.y="rows.n",all.x=T)
mc2$Row.names <- as.numeric(mc2$Row.names)


tmp <- filter(mc2,Row.names %nin% c(6:8,27,32,38,43)) %>% mutate(new_group = ifelse(newcol=="Race", paste(Race,Ethnic,sep="."), Letter_A)) %>%  dplyr::select(Row.names,newcol, new_group,Race, any_of(contains(select)),Site) %>% mutate(across(contains(select),~ as.numeric(.x)))

tmp.group <- as_tibble(tmp) %>% group_by(newcol) %>% mutate(across(contains(select),~sum(.x,na.rm=TRUE))) %>% distinct(newcol, .keep_all = TRUE) %>% as_tibble()

MC.missing <- as_tibble(tmp.group) %>% select(contains(select), Site, newcol) %>%
    mutate(across(where(is.numeric), ~ max(.x)-(.x))) %>% 
    mutate(new_group=ifelse(newcol=="Total",newcol, paste0(newcol,".Unknown/ Missing")))
          
          

MC.new <- tmp  %>% as_tibble() %>% group_by(newcol,new_group) %>% mutate(across(contains(select),~sum(as.numeric(.x),na.rm=TRUE))) %>% distinct(new_group, .keep_all = TRUE) %>% as_tibble() 

#MF.new$new_group <- ifelse(MF.new$newcol=="Race" & MF.new$Race =="Multiracial", "Other / Multiracial.non-Hispanic",MF.new$new_group)

nonKPs <- bind_rows(HF.new, SP.new, HP.new,MF.new,UCh.new) %>% group_by(newcol,new_group) %>% mutate(across(contains(select),~sum(as.numeric(.x),na.rm=TRUE))) %>% distinct(new_group, .keep_all = TRUE) %>% as_tibble()

nonKPs <- nonKPs %>% select(Row.names,newcol, new_group,Race, Total_Letters_A, Consent_A,Refusal_A, Total_Letters_B, Consent_B,Refusal_B, Total_Letters_C, Consent_C,Refusal_C, Total_Letters_D, Consent_D,Refusal_D, Total_Letters_X, Consent_X,Refusal_X,Site) %>% arrange(Row.names)
write_csv(nonKPs, file=paste(outputpath,"nonKPsLetter Variant Experiment Final Agg Data_",Sys.Date(),".csv",sep=""),na="")
```

Kelsey has just updated the HF data, which is saved in the <https://nih.app.box.com/folder/249013082039> as the file id (1450019778488)

```{r}
dt <- box_read(dir_id=249013082039, file_id=1450019778488)

  last.row <- as.numeric(nrow(dt))
  letter <- unlist(dt[1,][grepl("Letter", dt[1,])])
  names.new <- NULL
  for (i in 1:5){
    for (j in 1:8){
      n <- 8*(i-1)+j
      name <- paste(names[j],str_split_i(letter[i]," ",-1),sep="_")
      names(dt)[n] <-paste(names[j],str_split_i(letter[i]," ",2),sep="_")
      names.new <- c(names.new,name)
    }
  }


row.1st <- as.numeric(rownames(dt)[grepl("Total",dt[,1])])
hfh1 <- dt[c(row.1st:nrow(dt)),]
#to add the second column of the column name for the race ethnic
row.names(hfh1)[grepl("Total|Socioeconomic|Race|Age|Sex",hfh1$Letter_A)]
#"5"  "6"  "27" "33" "39"
rows.del = row.1st-1

  row_vec <- c(min(as.numeric(row.names(hfh1)[grepl("Total",hfh1$Letter_A)]))-rows.del, min(as.numeric(row.names(hfh1)[grepl("Race",hfh1$Letter_A)]))-rows.del, min(as.numeric(row.names(hfh1)[grepl("Socioeconomic",hfh1$Letter_A)]))-rows.del,min(as.numeric(row.names(hfh1)[grepl("Age",hfh1$Letter_A)]))-rows.del,min(as.numeric(row.names(hfh1)[grepl("Sex",hfh1$Letter_A)]))-rows.del,1+nrow(hfh1))

  times <- diff(row_vec)
  groups <- c("Overall","Race","SES","Age","Sex")

  newcol <- NULL
  for (m in 1:length(groups)){

  vet <- rep(groups[m],each=times[m])
  newcol <- c(newcol,vet)

  }

hfh1 <- cbind(hfh1,newcol)
hfh1$Site <-"HFH"
#hfh1 <- nonkp[[1]]
race <- data.frame(Race=rep(c("White","Black / African American","Asian / Middle Eastern","American Indian / Alaska Native", "Native Hawaiian","Unknown"), each=3), Ethnic = rep(c("Hispanic","non-Hispanic","unknown"),times=6), rows.n=c(as.numeric(row.names(hfh1)[grepl("White",hfh1$Letter_A)]):(as.numeric(row.names(hfh1)[grepl("Socioeconomic",hfh1$Letter_A)])-1 )))

hfh2 <- merge(hfh1,race, by.x="row.names",by.y="rows.n",all.x=T)
hfh2$Row.names <- as.numeric(hfh2$Row.names)


tmp <- filter(hfh2,Row.names %nin% c(6:8,27,32,38,43)) %>% 
  mutate(new_group= case_when(Race %in% c("unknown","Unknown") & Ethnic == "unknown" ~ "Race.Unknown/ Missing",
                              Race %in% c("unknown","Unknown") & Ethnic != "unknown" ~ paste("Unknown",Ethnic,sep="."),
                              grepl("other|multi", str_to_lower(Race)) ~ paste("Other / Multiracial",Ethnic,sep="."),
                              grepl("White|Black|Asian|Native|Indian|Hawaiian", Race) ~ paste(Race,Ethnic,sep="."),
                              newcol=="SES" & grepl("Missing",Letter_A) ~ "SES.Unknown/ Missing",
                              newcol=="Sex" & grepl("Unknown",Letter_A) ~ "Sex.Unknown/ Missing",
                              newcol %in% c("Sex","SES","Age", "Overall") & !grepl("unknown|missing",str_to_lower(Letter_A)) ~ Letter_A)) %>%  dplyr::select(Row.names,newcol, new_group,Race,Letter_A, any_of(contains(select)),Site) %>% mutate(across(contains(select),~ as.numeric(.x)))

#tmp$new_group[grepl("Unknowntmp$new_group )]
tmp.group <- tmp %>% group_by(newcol) %>% mutate(across(contains(select),~sum(.x,na.rm=TRUE))) %>% distinct(newcol, .keep_all = TRUE) %>% as_tibble()

HF.missing <- as.tibble(tmp.group) %>% select(contains(select), Site, newcol) %>%
    mutate(across(where(is.numeric), ~ max(.x)-(.x))) %>% 
    mutate(new_group=ifelse(newcol=="Total",newcol,paste0(newcol,".Unknown/ Missing")))
 
 HF.new <- bind_rows(tmp,HF.missing)  %>% as_tibble() %>% group_by(newcol,new_group) %>% mutate(across(contains(select),~sum(as.numeric(.x),na.rm=TRUE))) %>% distinct(new_group, .keep_all = TRUE) %>% as_tibble()
 
 nonKPs <- bind_rows(HF.new, SP.new, HP.new,MC.new,UCh.new) %>% group_by(newcol,new_group) %>% 
    mutate(new_group = ifelse(newcol=="Race" & grepl("Unknown.unknown",new_group), "Race.Unknown/ Missing", new_group)) %>% 
   mutate(across(contains(select),~sum(as.numeric(.x),na.rm=TRUE))) %>% distinct(new_group, .keep_all = TRUE) %>% as_tibble()

nonKPs <- nonKPs %>% select(Row.names,newcol, new_group,Race, Total_Letters_A, Consent_A,Refusal_A, Total_Letters_B, Consent_B,Refusal_B, Total_Letters_C, Consent_C,Refusal_C, Total_Letters_D, Consent_D,Refusal_D, Total_Letters_X, Consent_X,Refusal_X,Site) %>% arrange(Row.names)
write_csv(nonKPs, file=paste(outputpath,"nonKPsLetter Variant Experiment Final Agg Data_",Sys.Date(),".csv",sep=""),na="")

```
